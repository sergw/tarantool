test_run = require('test_run').new()
---
...
test_run:cmd('restart server default with cleanup=1')
fio = require('fio')
---
...
xlog = require('xlog')
---
...
netbox = require('net.box')
---
...
--
-- Check that xlogs doesn't contain IPROTO_SYNC
--
box.schema.user.grant('guest', 'write', 'space', '_schema')
---
...
conn = netbox.connect(box.cfg.listen)
---
...
-- insert some row using the binary protocol
conn.space._schema:insert({'test'})
---
- ['test']
...
-- rotate xlog
box.snapshot()
---
- ok
...
-- dump xlog
xlog_path = fio.pathjoin(box.cfg.wal_dir, string.format("%020d.xlog", 0))
---
...
result = {}
---
...
fun, param, state = xlog.pairs(xlog_path)
---
...
type(fun.totable)
---
- function
...
-- skip grants until our insert into _schema
repeat state, row = fun(param, state) until row.BODY.space_id == box.space._schema.id
---
...
row.HEADER.type
---
- INSERT
...
row.HEADER.sync
---
- null
...
row.BODY
---
- space_id: 272
  tuple: ['test']
...
box.space._schema:delete('test')
---
- ['test']
...
--
-- Clean up
--
netbox = nil
---
...
xlog = nil
---
...
fio = nil
---
...
